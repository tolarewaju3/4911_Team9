// Test the login page
INPUT: open home.html
EXPECTED OUTPUT: login page should appear
INPUT: click the "Log In" button
EXPECTED OUTPUT: error message should display
INPUT: click the "sign up" link contained within the error message
EXPECTED OUTPUT: signup page should appear
INPUT: click the browser's back button
INPUT: enter "testUser0@gmail.com" into Username field
INPUT: enter "wrongPW0" into Password field
INPUT: click the "Log In" button
EXPECTED OUTPUT: error message should display
INPUT: replace password field with "testPW0"
INPUT: click the "Log In" button
EXPECTED OUTPUT: main menu page should appear
INPUT: click the "Log Out" button
EXPECTED OUTPUT: login page should appear
INPUT: click the "Sign Up" button
EXPECTED OUTPUT: signup page should appear

// Test the signup page
INPUT: click the "Sign Up" button
EXPECTED OUTPUT: "invalid location" message should display
INPUT: enter something into the location field
INPUT: click the "Sign Up" button
EXPECTED OUTPUT: "invalid address" message should display
INPUT: enter something into the address field
INPUT: enter a four digit zip code into the zip code field
INPUT: click the "Sign Up" button
EXPECTED OUTPUT: "invalid zip code" message should display
INPUT: replace zip code field with a valid zip code
INPUT: enter "testUser0@gmail" into email field
INPUT: click the "Sign Up" button
EXPECTED OUTPUT: "invalid email" message should display
INPUT: replace email field with "testUser0@gmail.com"
INPUT: enter four character password into password field
INPUT: click the "Sign Up" button
EXPECTED OUTPUT: "invalid password" message should display
INPUT: replace password field with a valid password
INPUT: click the "Sign Up" button
EXPECTED OUTPUT: "duplicate email" message should display
INPUT: replace email field with new email address
INPUT: click the "Sign Up" button
EXPECTED OUTPUT: main menu page should appear

// Test the account settings page
INPUT: click the "Account Settings" button
OUTPUT: all fields, except "password", should contain values corresponding to the ones assigned during signup
INPUT: clear text from all fields
INPUT: repeat the entire "signup" test shown above, replacing the "Sign Up" button with the "Save Changes Button"
OUTPUT: all outputs should be the same as in the "signup" test, except the last output should be a positive feedback message instead of a redirect

// Test the menu edit page
INPUT: click the menu name field
INPUT: enter a new name into the field
INPUT: click the save menu name button
EXPECTED OUTPUT: an alert should appear saying the changes were made sucessfully
INPUT: click the add menu button
EXPECTED OUTPUT: a form that allows the user to enter an item should appear
INPUT: fill all fields in add item form, click save item
EXPECTED OUTPUT: the item should appear in the table to the left
INPUT: click edit items button
INPUT: click on table field column and edit the text
INPUT: click save button
EXPECTED OUTPUT: the field that was edited will remain
INPUT: click remove items button
INPUT: click any checkbox of item in far left column
INPUT: click remove selected button
EXPECTED OUTPUT: the item checked should disappear from view.
INPUT: click discard menu button
EXPECTED OUTPUT: the menu will be deleted from view, and the menu start form should appear

// Test view orders page
INPUT: click order row
EXPECTED OUTPUT: a dialog should appear on the right
INPUT: click close button
EXPECTED OUTPUT: the dialog should disappear from view